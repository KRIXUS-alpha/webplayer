{"version":3,"sources":["statics/album-art-placeholder.png","context/playerContext.js","components/Controls/Controls.js","context/songsData.js","components/Row/Row.js","context/playerReducer.js","context/playerActions.js","context/playerState.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","playerContext","createContext","Controls","useContext","currentSong","songs","nextSong","playlist","prevSong","repeat","random","playing","toggleRandom","toggleRepeat","togglePlaying","handleEnd","audio","useRef","useState","volume","setVolume","duration","setDuration","currentTime","setCurrentTime","fmtMSS","s","toggleAudio","current","paused","play","pause","useEffect","className","onTimeUpdate","e","target","onCanPlay","onEnded","ref","type","preload","src","value","Math","round","name","id","onChange","q","onClick","compute","songData","Row","props","setCurrent","rowScrollRef","handleScroll","direcion","scrollLeft","offsetWidth","genre","class","map","song","i","key","albumArt","state","action","data","playlistArr","PlayerState","initialState","useReducer","playerReducer","dispatch","length","Provider","console","log","children","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","debugContextDevtool","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.b61a9965.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/album-art-placeholder.f97c2385.png\";","import { createContext } from \"react\";\n\nconst playerContext = createContext();\n\nexport default playerContext;\n","import React, { useState, useEffect, useRef, useContext } from \"react\";\nimport playerContext from \"../../context/playerContext.js\";\n\nfunction Controls() {\n  //global state\n\n  const {\n    currentSong,\n    songs,\n    playlist,\n    nextSong,\n    prevSong,\n    repeat,\n    random,\n    playing,\n    toggleRandom,\n    toggleRepeat,\n    togglePlaying,\n    handleEnd\n  } = useContext(playerContext);\n\n  const audio = useRef(\"audio-tag\");\n\n  //self state\n  const [volume, setVolume] = useState(0.5);\n  const [duration, setDuration] = useState(0);\n  const [currentTime, setCurrentTime] = useState(0);\n\n  const fmtMSS = s => {\n    return (s - (s %= 60)) / 60 + (9 < s ? \":\" : \":0\") + ~~s;\n  };\n\n  const toggleAudio = () =>\n    audio.current.paused ? audio.current.play() : audio.current.pause();\n\n  const handleVolume = q => {\n    setVolume(q);\n    audio.current.volume = q;\n  };\n\n  const handleProgress = e => {\n    let compute = (e.target.value * duration) / 100;\n    setCurrentTime(compute);\n    audio.current.currentTime = compute;\n  };\n\n  useEffect(() => {\n    audio.current.volume = volume;\n    if (playing) {\n      toggleAudio();\n    }\n  }, [currentSong]);\n\n  return (\n    <div className=\"controls\">\n      <audio\n        onTimeUpdate={e => setCurrentTime(e.target.currentTime)}\n        onCanPlay={e => setDuration(e.target.duration)}\n        onEnded={handleEnd}\n        ref={audio}\n        type=\"audio/mpeg\"\n        preload=\"true\"\n        src={songs[currentSong][1]}\n      />\n      <div className=\"vlme\">\n        <span className=\"volum\">\n          <i className=\"fas fa-volume-down\"></i>\n        </span>\n        <input\n          value={Math.round(volume * 100)}\n          type=\"range\"\n          name=\"volBar\"\n          id=\"volBar\"\n          onChange={e => handleVolume(e.target.value / 100)}\n        />\n      </div>\n      <div className=\"musicControls\">\n        <span className=\"prev\" onClick={prevSong}>\n          <i className=\"fas fa-step-backward\"></i>\n        </span>\n\n        <span\n          className=\"play\"\n          onClick={() => {\n            togglePlaying();\n            toggleAudio();\n          }}\n        >\n          <span className={!playing ? \"\" : \"hide\"}>\n            <i className=\"fas fa-play\"></i>\n          </span>\n          <span className={!playing ? \"hide\" : \"\"}>\n            <i className=\"fas fa-pause\"></i>\n          </span>\n        </span>\n\n        <span className=\"next\" onClick={nextSong}>\n          <i className=\"fas fa-step-forward\"></i>\n        </span>\n      </div>\n      <div className=\"progressb\">\n        <span className=\"currentT\">{fmtMSS(currentTime)}</span>\n        <input\n          onChange={handleProgress}\n          value={duration ? (currentTime * 100) / duration : 0}\n          type=\"range\"\n          name=\"progresBar\"\n          id=\"prgbar\"\n        />\n        <span className=\"totalT\">{fmtMSS(duration)}</span>\n      </div>\n      <div className=\"plsoptions\">\n        <span\n          onClick={toggleRandom}\n          className={\"random \" + (random ? \"active\" : \"\")}\n        >\n          <i className=\"fas fa-random\"></i>\n        </span>\n        <span\n          onClick={toggleRepeat}\n          className={\"repeat \" + (repeat ? \"active\" : \"\")}\n        >\n          <i className=\"fas fa-redo-alt\"></i>\n        </span>\n      </div>\n    </div>\n  );\n}\n\nexport default Controls;\n","export const songData = [\n  [\n    \"Kopeika\",\n    \"https://files.freemusicarchive.org/storage-freemusicarchive-org/music/WFMU/et_/The_agency_of_missing_hearts/et__-_02_-_Kopeika.mp3\"\n  ],\n  [\n    \"Children\",\n    \"https://files.freemusicarchive.org/storage-freemusicarchive-org/music/WFMU/et_/The_agency_of_missing_hearts/et__-_01_-_Children.mp3\"\n  ],\n  [\n    \"Interception\",\n    \"https://files.freemusicarchive.org/storage-freemusicarchive-org/music/ccCommunity/Kai_Engel/Satin/Kai_Engel_-_07_-_Interception.mp3\"\n  ],\n  [\n    \"Sentinel\",\n    \"https://files.freemusicarchive.org/storage-freemusicarchive-org/music/ccCommunity/Kai_Engel/Satin/Kai_Engel_-_04_-_Sentinel.mp3\"\n  ],\n  [\n    \"Great Expectations\",\n    \"https://files.freemusicarchive.org/storage-freemusicarchive-org/music/ccCommunity/Kai_Engel/Satin/Kai_Engel_-_05_-_Great_Expectations.mp3\"\n  ],\n  [\n    \"Downfall\",\n    \"https://files.freemusicarchive.org/storage-freemusicarchive-org/music/ccCommunity/Kai_Engel/Satin/Kai_Engel_-_08_-_Downfall.mp3\"\n  ],\n  [\n    \"Augmentations\",\n    \"https://files.freemusicarchive.org/storage-freemusicarchive-org/music/ccCommunity/Kai_Engel/Satin/Kai_Engel_-_01_-_Augmentations.mp3\"\n  ],\n  [\n    \"Illumination\",\n    \"https://files.freemusicarchive.org/storage-freemusicarchive-org/music/no_curator/Kai_Engel/Satin/Kai_Engel_-_02_-_Illumination.mp3\"\n  ],\n  [\n    \"Cabaret\",\n    \"https://files.freemusicarchive.org/storage-freemusicarchive-org/music/ccCommunity/Kai_Engel/Satin/Kai_Engel_-_10_-_Cabaret.mp3\"\n  ],\n  [\n    \"Contention\",\n    \"https://files.freemusicarchive.org/storage-freemusicarchive-org/music/ccCommunity/Kai_Engel/Satin/Kai_Engel_-_03_-_Contention.mp3\"\n  ],\n  [\n    \"Dark Alleys\",\n    \"https://files.freemusicarchive.org/storage-freemusicarchive-org/music/ccCommunity/Kai_Engel/Satin/Kai_Engel_-_06_-_Dark_Alleys.mp3\"\n  ],\n  [\n    \"Climb\",\n    \"https://files.freemusicarchive.org/storage-freemusicarchive-org/music/Ziklibrenbib/The_Ghost_in_Your_Piano/The_Ghost_in_your_piano/The_Ghost_in_Your_Piano_-_01_-_Climb.mp3\"\n  ],\n  [\n    \"Adventure\",\n    \"https://files.freemusicarchive.org/storage-freemusicarchive-org/music/Ziklibrenbib/The_Ghost_in_Your_Piano/The_Ghost_in_your_piano/The_Ghost_in_Your_Piano_-_03_-_Adventure.mp3\"\n  ],\n  [\n    \"Lullaby\",\n    \"https://files.freemusicarchive.org/storage-freemusicarchive-org/music/Ziklibrenbib/The_Ghost_in_Your_Piano/The_Ghost_in_your_piano/The_Ghost_in_Your_Piano_-_04_-_Lullaby.mp3\"\n  ]\n];\n","import React, { useContext, useRef } from \"react\";\nimport albumArt from \"../../statics/album-art-placeholder.png\";\nimport { songData } from \"../../context/songsData\";\nimport \"../../Css/Row.css\";\nimport playerContext from \"../../context/playerContext\";\n\nfunction Row(props) {\n  const { setCurrent, currentSong, songs } = useContext(playerContext);\n\n  const rowScrollRef = useRef(null);\n\n  const handleScroll = direcion => {\n    if (direcion == \"left\") {\n      // eslint-disable-next-line no-unused-expressions\n      rowScrollRef.current\n        ? (rowScrollRef.current.scrollLeft -= rowScrollRef.current.offsetWidth)\n        : null;\n    } else {\n      // eslint-disable-next-line no-unused-expressions\n      rowScrollRef.current\n        ? (rowScrollRef.current.scrollLeft += rowScrollRef.current.offsetWidth)\n        : null;\n    }\n  };\n  return (\n    <div>\n      {/* title */}\n\n      <h1 className=\"title\">{props.genre}</h1>\n      <div className=\"row\">\n        {/* Horizontal left */}\n        <div>\n          <button\n            className=\"button-horizontal-scroll\"\n            onClick={() => handleScroll(\"left\")}\n          >\n            <i class=\"fas fa-angle-left fa-3x\"></i>\n          </button>\n        </div>\n        {/* container ->posters */}\n\n        <div className=\"row__songs\" ref={rowScrollRef}>\n          {songData.map((song, i) => (\n            <div\n              className={\n                \" card songcontainer \" + (currentSong === i ? \"selected\" : \"\")\n              }\n              key={i}\n              onClick={() => {\n                setCurrent(i);\n              }}\n            >\n              <div className=\"card_image\">\n                <img src={albumArt}></img>\n              </div>\n              <div className=\"card_title title-white\">\n                <p>{songData[i][0]}</p>\n              </div>\n            </div>\n            // <img\n            //   className={\"songcontainer \" + (currentSong === i ? \"selected\" : \"\")}\n            //   key={i}\n            //   onClick={() => {\n            //     setCurrent(i);\n            //   }}\n            //   src={albumArt}\n            // ></img>\n          ))}\n        </div>\n        <div>\n          <button\n            className=\"button-horizontal-scroll\"\n            onClick={() => handleScroll(\"right\")}\n          >\n            <i class=\"fas fa-angle-right fa-3x\"></i>\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Row;\n","import {\n  SET_CURRENT_SONG,\n  TOGGLE_PLAYING,\n  TOGGLE_REPEAT,\n  TOGGLE_RANDOM,\n  ADD_TO_PLAYLIST\n} from \"./playerActions\";\n\nexport default (state, action) => {\n  switch (action.type) {\n    case SET_CURRENT_SONG:\n      return {\n        ...state,\n        currentSong: action.data,\n        playing: true\n      };\n    case TOGGLE_RANDOM:\n      return {\n        ...state,\n        random: action.data\n      };\n    case TOGGLE_PLAYING:\n      return {\n        ...state,\n        playing: action.data\n      };\n    case TOGGLE_REPEAT:\n      return {\n        ...state,\n        repeat: action.data\n      };\n    case ADD_TO_PLAYLIST:\n      return {\n        ...state,\n        playlist: action.data\n      };\n    default:\n      return state;\n  }\n};\n","export const SET_CURRENT_SONG = \"SET_CURRENT_SONG\";\nexport const TOGGLE_RANDOM = \"TOGGLE_RANDOM\";\nexport const TOGGLE_REPEAT = \"TOGGLE_REPEAT\";\nexport const TOGGLE_PLAYING = \"TOGGLE_PLAYING\";\nexport const ADD_TO_PLAYLIST = \"ADD_TO_PLAYLIST\";\n","import React, { useReducer } from \"react\";\nimport playerContext from \"./playerContext\";\nimport playerReducer from \"./playerReducer\";\nimport { songData } from \"./songsData\";\n\nimport {\n  SET_CURRENT_SONG,\n  TOGGLE_PLAYING,\n  TOGGLE_REPEAT,\n  TOGGLE_RANDOM,\n  ADD_TO_PLAYLIST\n} from \"./playerActions\";\n\nconst playlistArr = [];\n\n// check current song data type\nconst PlayerState = props => {\n  const initialState = {\n    currentSong: 0,\n    songs: songData,\n    repeat: false,\n    random: false,\n    playing: false,\n    audio: null,\n    playlist: playlistArr\n  };\n\n  const [state, dispatch] = useReducer(playerReducer, initialState);\n\n  //Set playing State\n\n  const togglePlaying = () =>\n    dispatch({ type: TOGGLE_PLAYING, data: state.playing ? false : true });\n\n  //Set current song\n  const setCurrent = id => dispatch({ type: SET_CURRENT_SONG, data: id });\n\n  //Prv song\n  const prevSong = () => {\n    if (state.currentSong === 0) {\n      setCurrent(state.playlist.length - 1);\n    } else {\n      setCurrent(state.currentSong - 1);\n    }\n  };\n\n  //Next song\n  const nextSong = () => {\n    if (state.currentSong === state.playlist.length - 1) {\n      setCurrent(0);\n    } else {\n      setCurrent(state.currentSong + 1);\n    }\n  };\n\n  //repeat and random\n  const toggleRepeat = id =>\n    dispatch({ type: TOGGLE_REPEAT, data: state.repeat ? false : true });\n  const toggleRandom = id =>\n    dispatch({ type: TOGGLE_RANDOM, data: state.random ? false : true });\n\n  //End of song\n  const handleEnd = () => {\n    if (state.random) {\n      return dispatch({\n        type: SET_CURRENT_SONG,\n        data: ~~(Math.random() * state.songs.length)\n      });\n    } else if (state.repeat) {\n      console.log(state.currentSong);\n      return dispatch({ type: SET_CURRENT_SONG, data: state.currentSong + 0 });\n    } else {\n      nextSong();\n    }\n  };\n\n  return (\n    <playerContext.Provider\n      value={{\n        currentSong: state.currentSong,\n        songs: state.songs,\n        repeat: state.repeat,\n        random: state.random,\n        playing: state.playing,\n        audio: state.audio,\n        playlist: state.playlist,\n        nextSong,\n        prevSong,\n        setCurrent,\n        toggleRandom,\n        toggleRepeat,\n        togglePlaying,\n        handleEnd\n      }}\n    >\n      {props.children}\n    </playerContext.Provider>\n  );\n};\n\nexport default PlayerState;\n","import React from \"react\";\nimport Controls from \"./components/Controls/Controls\";\nimport Row from \"./components/Row/Row\";\nimport PlayerState from \"./context/playerState\";\nimport \"./App.css\";\nimport \"./main.css\";\nimport \"./input.css\";\n\nfunction App() {\n  return (\n    <PlayerState>\n      <div className=\"main\">\n        <Row genre=\"Genre goes here\" />\n        <Row genre=\"Genre goes here\" />\n\n        <Controls />\n      </div>\n      <hr></hr>\n    </PlayerState>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { debugContextDevtool } from \"react-context-devtool\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\ndebugContextDevtool(document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}